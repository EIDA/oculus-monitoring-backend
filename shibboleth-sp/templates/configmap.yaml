---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    {{- include "shibboleth-sp.labels" . | nindent 8 }}
    {{- with .Values.podLabels }}
    {{- toYaml . | nindent 8 }}
    {{- end }}
  name: {{ include "shibboleth-sp.fullname" . }}
data:
  {{- range $key, $val := .Values.config }}
  {{ $key }}: "{{ $val }}"
  {{- end }}
  {{- if not .Values.backend.shibboleth.configMap -}}
  shibboleth2.xml: |-
    <SPConfig xmlns="urn:mace:shibboleth:3.0:native:sp:config"
        xmlns:conf="urn:mace:shibboleth:3.0:native:sp:config"
        xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
        clockSkew="180">

    {{ if .Values.backend.shibboleth.memcached.enabled }}
      <OutOfProcess tranLogFormat="%u|%s|%IDP|%i|%ac|%t|%attr|%n|%b|%E|%S|%SS|%L|%UA|%a">
        <Extensions>
          <Library path="memcache-store.so" fatal="true"/>
        </Extensions>
      </OutOfProcess>

      <StorageService type="MEMCACHE" id="mc" prefix="{{ .Values.backend.shibboleth.memcached.prefix }}">
        <Hosts>
          {{ .Values.backend.shibboleth.memcached.hosts }}
        </Hosts>
      </StorageService>

      <StorageService type="MEMCACHE" id="mc-ctx" prefix="{{ .Values.backend.shibboleth.memcached.prefix }}" buildMap="1">
        <Hosts>
          {{ .Values.backend.shibboleth.memcached.hosts }}
        </Hosts>
      </StorageService>

      <SessionCache type="StorageService" StorageService="mc-ctx" StorageServiceLite="mc" />
      <ReplayCache StorageService="mc" />
      <ArtifactMap StorageService="mc" />
    {{- else }}
      <OutOfProcess tranLogFormat="%u|%s|%IDP|%i|%ac|%t|%attr|%n|%b|%E|%S|%SS|%L|%UA|%a" />
      {{ if .Values.backend.shibboleth.sessionCache.enabled }}
        <DataSealer type="Versioned" path="sealer.keys" />
        <SessionCache type="StorageService" persistedAttributes="{{ .Values.backend.shibboleth.sessionCache.persistedAttributes }}" />
      {{- end }}
    {{- end }}

      <!-- The ApplicationDefaults element is where most of Shibboleth's SAML bits are defined. -->
        <ApplicationDefaults entityID="{{ tpl .Values.backend.shibboleth.applicationDefaults.entityID . }}"
                            homeURL="{{ .Values.backend.shibboleth.applicationDefaults.homeURL | default "/Shibboleth.sso/Session" }}"
    {{- if .Values.backend.shibboleth.publicAttributes }}
                                metadataAttributePrefix="Meta-"
    {{- end }}
                                REMOTE_USER="{{ .Values.backend.shibboleth.applicationDefaults.remoteUser | default "persistent-id uniqueID" }}"
                                cipherSuites="DEFAULT:!EXP:!LOW:!aNULL:!eNULL:!DES:!IDEA:!SEED:!RC4:!3DES:!kRSA:!SSLv2:!SSLv3:!TLSv1:!TLSv1.1">

                <!--
                Controls session lifetimes, address checks, cookie handling, and the protocol handlers.
                Each Application has an effectively unique handlerURL, which defaults to "/Shibboleth.sso"
                and should be a relative path, with the SP computing the full value based on the virtual
                host. Using handlerSSL="true" will force the protocol to be https. You should also set
                cookieProps to "https" for SSL-only sites. Note that while we default checkAddress to
                "false", this makes an assertion stolen in transit easier for attackers to misuse.
                -->
                <Sessions lifetime="28800"
                          timeout="3600"
    {{- if .Values.backend.shibboleth.memcached.enabled }}
                          relayState="ss:mc"
    {{- else }}
                          relayState="ss:mem"
    {{- end }}
                          checkAddress="{{ .Values.backend.shibboleth.applicationDefaults.sessions.checkAddress | default "true" }}"
                          consistentAddress="{{ .Values.backend.shibboleth.applicationDefaults.sessions.consistentAddress | default "true" }}"
                          handlerSSL="{{ .Values.backend.shibboleth.applicationDefaults.sessions.handlerSSL | default "true" }}"
                          redirectLimit="{{ .Values.backend.shibboleth.applicationDefaults.sessions.redirectLimit | default "host" }}"
                          cookieProps="{{ tpl .Values.backend.shibboleth.applicationDefaults.sessions.cookieProps . | default "https" }}"
    {{- if .Values.backend.shibboleth.applicationDefaults.sessions.sameSiteSession }}
                          sameSiteSession="{{ .Values.backend.shibboleth.applicationDefaults.sessions.sameSiteSession }}"
    {{- end }}
                          >

        {{ if .Values.backend.shibboleth.eduIDOnly }}
          <!-- Send user directly to edu-ID Identity Provider -->
        {{- if eq .Values.backend.shibboleth.eduIDVersion "test" }}
          <SSO entityID="https://test.eduid.ch/idp/shibboleth">
        {{- else }}
          <SSO entityID="https://eduid.ch/idp/shibboleth">
        {{- end }}
              SAML2
          </SSO>
        {{- else }}
                    <!--
                    Configures SSO for a default IdP. To properly allow for >1 IdP, remove
                    entityID property and adjust discoveryURL to point to discovery service.
                    You can also override entityID on /Login query string, or in RequestMap/htaccess.
                    -->
                    <SSO discoveryProtocol="SAMLDS"
                        discoveryURL="{{ .Values.backend.shibboleth.discoveryURL }}">
                      SAML2
                    </SSO>
    {{- end }}

                    <!-- SAML and local-only logout. -->
                    <Logout>SAML2 Local</Logout>

                    <!-- Administrative logout. -->
                    <LogoutInitiator type="Admin"
                                    Location="/Logout/Admin"
                                    acl="127.0.0.1 ::1" />

                    <!-- Extension service that generates "approximate" metadata based on SP configuration. -->
                    <Handler type="MetadataGenerator"
                            Location="/Metadata"
                            signing="false"/>

                    <!-- Status reporting service.
                        The first IPv4/IPv6 address pair allows access from local host. -->
                    <Handler type="Status"
                            Location="/Status"
                            acl="127.0.0.1/32"/>

                    <!-- Session diagnostic service. -->
                    <Handler type="Session"
                            Location="/Session"
                            showAttributeValues="false"/>

                    <!-- JSON feed of discovery information. -->
                    <Handler type="DiscoveryFeed"
                            Location="/DiscoFeed"/>
                </Sessions>

                <!--
                Allows overriding of error template information/filenames. You can
                also add your own attributes with values that can be plugged into the
                templates, e.g., helpLocation below.
                -->
                <Errors access="accessError.html"
                        supportContact="{{ .Values.backend.shibboleth.applicationDefaults.errors.supportContact }}"
                        helpLocation="/about.html"
                        styleSheet="/shibboleth-sp/main.css"/>

                <!-- Download and verify RENATER metadata -->
                <MetadataProvider type="XML"
                                  validate="true"
    {{- if eq .Values.backend.shibboleth.eduIDVersion "test" }}
              url="https://pub.federation.renater.fr/metadata/test/preview/preview-idps-test-metadata.xml"
              backingFilePath="preview-idps-test-metadata.xml"
    {{- else }}
              url="https://pub.federation.renater.fr/metadata/renater/main/main-idps-renater-metadata.xml"
              backingFilePath="main-idps-renater-metadata.xml"
    {{- end }}
              reloadInterval="3600">
              <MetadataFilter type="Signature" certificate="renater-metadata-signing-cert-2016.pem"/>
    {{- if eq .Values.backend.shibboleth.version "3.1" }}
                    <MetadataFilter type="EntityRoleWhiteList">
    {{- else }}
                    <MetadataFilter type="EntityRole">
    {{- end }}
                        <RetainedRole>md:IDPSSODescriptor</RetainedRole>
                        <RetainedRole>md:AttributeAuthorityDescriptor</RetainedRole>
                    </MetadataFilter>
                </MetadataProvider>


                <!-- Map to extract attributes from SAML assertions. -->
                <AttributeExtractor type="XML"
                                    validate="true"
                                    reloadChanges="false"
                                    path="attribute-map.xml"/>

    {{- if .Values.backend.shibboleth.publicAttributes }}
                <!-- Extract further attributes about Identity Providers from metadata -->
                <AttributeExtractor  type="Metadata"
                                    errorURL="errorURL"
                                    DisplayName="displayName"
                                    InformationURL="informationURL"
                                    PrivacyStatementURL="privacyStatementURL"
                                    OrganizationURL="organizationURL">
                    <ContactPerson
                            id="technicalContactDisplayName"
                            contactType="technical"
                            formatter="$GivenName $SurName" />
                    <ContactPerson
                            id="technicalContactMailtoURI"
                            contactType="technical"
                            formatter="$EmailAddress" />
                    <ContactPerson
                            id="supportContactDisplayName"
                            contactType="support"
                            formatter="$GivenName $SurName" />
                    <ContactPerson
                            id="supportContactMailtoURI"
                            contactType="support"
                            formatter="$EmailAddress" />
                    <ContactPerson
                            id="administrativeContactDisplayName"
                            contactType="administrative"
                            formatter="$GivenName $SurName" />
                    <ContactPerson
                            id="administrativeContactMailtoURI"
                            contactType="administrative"
                            formatter="$EmailAddress" />
                    <Logo
                          id="smallLogo"
                          height="16"
                          width="16"
                          formatter="&lt;img src='$_string' height='$height' width='$width'/&gt;"/>
                    <Logo
                            id="largeLogo"
                            height="60"
                            width="80"
                            formatter="&lt;img src='$_string' height='$height' width='$width'/&gt;"/>
                </AttributeExtractor>
    {{- end }}

                <!-- Use a SAML query if no attributes are supplied during SSO. -->
                <AttributeResolver type="Query"
                                  subjectMatch="true"/>

                <!-- Default filtering policy for recognized attributes, lets other data pass -->
                <AttributeFilter type="XML"
                                validate="true"
                                reloadChanges="false"
                                path="attribute-policy.xml"/>

                <!--
                Certificate/Private key pairs are read in sequence.
                Unless specificially defined only the first
                CredentialResolver is used for attribute requests.
                -->
                <CredentialResolver type="Chaining">
                    <!-- Active certificate -->
                    <CredentialResolver type="File"
                                        key="/etc/shibboleth/sp-key-active.pem"
                                        certificate="/etc/shibboleth/sp-cert-active.pem"/>
    {{- if .Values.backend.shibboleth.applicationDefaults.credentialResolver.additionalSecretName }}
                    <!-- Additional certificate -->
                    <CredentialResolver type="File"
                                        key="/etc/shibboleth/sp-key-additional.pem"
                                        certificate="/etc/shibboleth/sp-cert-additional.pem"/>
    {{- end }}
                </CredentialResolver>

                <!--
                The default settings can be overridden by creating ApplicationOverride elements.
                -->
            </ApplicationDefaults>

            <!-- Policies that determine how to process and authenticate runtime messages. -->
            <SecurityPolicyProvider type="XML"
                                    validate="true"
                                    reloadChanges="false"
                                    path="security-policy.xml"/>

            <!-- Low-level configuration about protocols and bindings available for use. -->
            <ProtocolProvider type="XML"
                              validate="true"
                              reloadChanges="false"
                              path="protocols.xml"/>

        </SPConfig>
  shibd.logger: |
        ### set overall behavior
        log4j.rootCategory={{ .Values.backend.shibboleth.log4j.rootCategory | default "INFO, default_log" }}

        ### change detail behavior
    {{- if .Values.backend.shibboleth.log4j.settings }}
        {{- .Values.backend.shibboleth.log4j.settings | nindent 4 }}
    {{- else }}
        # fairly verbose for DEBUG, so generally leave at INFO
        log4j.category.XMLTooling.XMLObject=INFO
        log4j.category.XMLTooling.XMLObjectBuilder=INFO
        log4j.category.XMLTooling.KeyInfoResolver=INFO
        log4j.category.Shibboleth.IPRange=INFO
        log4j.category.Shibboleth.PropertySet=INFO

        # raise for low-level tracing of SOAP client HTTP/SSL behavior
        log4j.category.XMLTooling.libcurl=INFO

        # the tran log blocks the "default" appender(s) at runtime
        # Level should be left at INFO for this category
        log4j.category.Shibboleth-TRANSACTION=INFO, transaction_log
        log4j.additivity.Shibboleth-TRANSACTION=false
        log4j.ownAppenders.Shibboleth-TRANSACTION=true
    {{- end }}

        ### define appenders
    {{- if .Values.backend.shibboleth.log4j.appenders }}
        {{- .Values.backend.shibboleth.log4j.appenders | nindent 4 }}
    {{- else }}
        # default_log appender
        log4j.appender.default_log=org.apache.log4j.ConsoleAppender
        log4j.appender.default_log.layout=org.apache.log4j.PatternLayout
        log4j.appender.default_log.layout.ConversionPattern=%d{%Y-%m-%d %H:%M:%S} %p %c %x: %m%n

        # transaction_log appender
        log4j.appender.transaction_log=org.apache.log4j.ConsoleAppender
        log4j.appender.transaction_log.layout=org.apache.log4j.PatternLayout
        log4j.appender.transaction_log.layout.ConversionPattern=%d{%Y-%m-%d %H:%M:%S} %p %c %x: %m%n
    {{- end }}

    {{- end -}}
