# Default values for shibboleth-sp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

backend:
  shibboleth:
    memcached:
      enabled: false
    sessionCache:
      enabled: false
    applicationDefaults:
      entityID: https://sp.resif.fr
      homeURL: /Shibboleth.sso/Session

config:
  RENATER_SP_TEST_OR_PROD: TEST
  # L'identifiant technique de votre fournisseur de service
  # (vous devrez forcément le modifer pour votre usage)
  RENATER_SP_ENTITY_ID: "https://sp.resif.fr"
  # L'adresse mail de contact qui sera utilisé dans les pages
  # d'erreur d'Apache et de Shibboleth
  RENATER_SP_ADMIN_MAIL: "sismo-help@resif.fr"
  # Les noms des fichiers des certificats utilisés par shibboleth
  # (pour la prod, vous devrez modifier ces valeurs)
  RENATER_SP_CERTIFICATE_CRT: "ssl/server.crt"
  RENATER_SP_CERTIFICATE_KEY: "ssl/server.key"
  # Le nom public du serveur web de votre fournisseur de service
  RENATER_SP_HTTPD_SERVER_NAME: "https://sp.resif.fr"
  # Le niveau et format de log du serveur apache
  # avec un exemple de format permettant de logguer les attributs venant de la fédé
  RENATER_SP_HTTPD_LOG_LEVEL: "info ssl:warn"
  # RENATER_SP_HTTPD_LOG_FORMAT: |
  #  %h \"%{Shib-Identity-Provider}i\" \"%{eppn}i\" \"%{primary-affiliation}i\" \"%{supannEtablissement}i\" %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"
  # permet de forcer apache à fermer les connexion pour pouvoir rafraîchir
  # la resolution de nom des proxypass car dans un context docker, les ip des
  # conteneurs peuvent changer
  # voir aussi https://httpd.apache.org/docs/2.4/mod/mod_proxy.html#proxypass
  RENATER_SP_HTTPD_PROXYPASS_DISABLEREUSE: "on"
  # Les correspondances entre les chemins dans l'URL et les URL des serveurs backend proxifiés.
  # il est possible de créer 10 couples ..._PUBLIC_PATH_* / ..._PUBLIC_PROXY_TO_*
  # et 10 couples ..._PROTECTED_PATH_* / ..._PROTECTED_PROXY_TO_*
  # Il est obligatoire de positionner au moins un couple PUBLIC et un couple PROTECTED
  RENATER_SP_HTTPD_PUBLIC_PATH_0: "/"
  RENATER_SP_HTTPD_PUBLIC_PROXY_TO_0: "http://backend-example-home:8080/"
  # RENATER_SP_HTTPD_PUBLIC_PATH_1: "/api/"
  # RENATER_SP_HTTPD_PUBLIC_PROXY_TO_1: "http://backend-example-api:8080/api/v1/"
  # RENATER_SP_HTTPD_PUBLIC_PATH_2: '^/([0-9]{8}[0-9X]{1})\.xml'
  # RENATER_SP_HTTPD_PUBLIC_PROXY_TO_2: "http://backend-example-api:8080/api/v1/export/$1/xml"
  # RENATER_SP_HTTPD_PROTECTED_PATH_0: "/my-protected-url/"
  # RENATER_SP_HTTPD_PROTECTED_PROXY_TO_0: "http://backend-example-protected:8080/my-protected-url/"
  # RENATER_SP_HTTPD_PROTECTED_PATH_1: "/my-protected-url2/"
  # RENATER_SP_HTTPD_PROTECTED_PROXY_TO_1: "http://backend-example-protected2:8080/my-protected-url2/"
  # RENATER_SP_HTTPD_PROTECTED_REQUIRE_1_0: "Require shib-attr Shib-Identity-Provider https://test-idp.federation.renater.fr/idp/shibboleth"
  # RENATER_SP_HTTPD_PROTECTED_REQUIRE_1_1: "Require shib-attr eppn etudiant2@test-renater.fr"

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: abesesr/docker-shibboleth-renater-sp
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 443

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: sp.resif.fr
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /Shibboleth.sso/Metadata
    port: 443
    scheme: HTTPS
readinessProbe:
  httpGet:
    path: /Shibboleth.sso/Metadata
    port: 443
    scheme: HTTPS

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
