---
- name: Create Zabbix users
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../config/config_staging.yaml
    - ../files/oculus_users.yaml
    - ../files/eida_nodes.yaml
  vars:
    ansible_network_os: community.zabbix.zabbix
    ansible_connection: httpapi
    ansible_httpapi_port: 8888
    ansible_httpapi_use_ssl: false
    ansible_httpapi_validate_certs: false
    ansible_zabbix_url_path: ""
    ansible_host: localhost

  tasks:
    - name: Import Zabbix Credentials
      ansible.builtin.import_tasks: ../config/config_zabbix.yaml

    - name: Create users groups
      delegate_to: localhost
      loop: "{{ oculus_users }}"
      community.zabbix.zabbix_usergroup:
        name: "{{ item.usrgrp }}"
        templategroup_rights:
          - template_group: Templates/EIDA
            permission: read-only
        hostgroup_rights:
          - host_group: "{{ item.usrgrp }}"
            permission: read-only
        tag_filters:
          - host_group: "{{ item.usrgrp }}"

    - name: Create users
      delegate_to: localhost
      loop: "{{ oculus_users }}"
      community.zabbix.zabbix_user:
        username: "{{ item.username }}"
        name: "{{ item.name }}"
        usrgrps:
          - Internal
          - "{{ item.usrgrp }}"
        passwd: "{{ zabbix_user_pass }}"
        lang: en_GB
        autologin: false
        refresh: "30"
        rows_per_page: "50"
        user_medias:
          - mediatype: Email (HTML) EIDA
            sendto:
              - "{{ item.email }}"

    - name: Create API user group
      delegate_to: localhost
      community.zabbix.zabbix_usergroup:
        name: "API-RO"
        templategroup_rights:
          - template_group: Templates/EIDA
            permission: read-only
        hostgroup_rights: >
          {{ eida_nodes | map('regex_replace', '^(.*)$', '{"host_group": "\1", "permission": "read-only"}') | map('from_json') | list }}
        tag_filters: "{{ eida_nodes | map('regex_replace', '^(.*)$', '{\"host_group\": \"\\1\"}') | map('from_json') | list }}"

    - name: Create grafana user
      delegate_to: localhost
      community.zabbix.zabbix_user:
        username: grafana
        usrgrps:
          - API-RO
          - "No access to the frontend"
        passwd: "{{ zabbix_grafana_pass }}"
        lang: en_GB
        autologin: false
